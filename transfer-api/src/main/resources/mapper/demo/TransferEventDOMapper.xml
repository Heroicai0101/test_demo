<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cgx.test.infrastructure.persistence.demo.mapper.TransferEventMapper" >
  <resultMap id="BaseResultMap" type="com.cgx.test.infrastructure.persistence.demo.model.TransferEventDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="transaction_no" property="transactionNo" jdbcType="VARCHAR" />
    <result column="self_user_id" property="selfUserId" jdbcType="BIGINT" />
    <result column="opposite_user_id" property="oppositeUserId" jdbcType="BIGINT" />
    <result column="amount" property="amount" jdbcType="BIGINT" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, transaction_no, self_user_id, opposite_user_id, amount, gmt_created, gmt_modified
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cgx.test.infrastructure.persistence.demo.model.TransferEventDOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from transfer_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from transfer_event
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from transfer_event
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cgx.test.infrastructure.persistence.demo.model.TransferEventDOExample" >
    delete from transfer_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cgx.test.infrastructure.persistence.demo.model.TransferEventDO" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into transfer_event (transaction_no, self_user_id, opposite_user_id, 
      amount, gmt_created, gmt_modified
      )
    values (#{transactionNo,jdbcType=VARCHAR}, #{selfUserId,jdbcType=BIGINT}, #{oppositeUserId,jdbcType=BIGINT}, 
      #{amount,jdbcType=BIGINT}, #{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cgx.test.infrastructure.persistence.demo.model.TransferEventDO" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into transfer_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="transactionNo != null" >
        transaction_no,
      </if>
      <if test="selfUserId != null" >
        self_user_id,
      </if>
      <if test="oppositeUserId != null" >
        opposite_user_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="transactionNo != null" >
        #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="selfUserId != null" >
        #{selfUserId,jdbcType=BIGINT},
      </if>
      <if test="oppositeUserId != null" >
        #{oppositeUserId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cgx.test.infrastructure.persistence.demo.model.TransferEventDOExample" resultType="java.lang.Integer" >
    select count(*) from transfer_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update transfer_event
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.transactionNo != null" >
        transaction_no = #{record.transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="record.selfUserId != null" >
        self_user_id = #{record.selfUserId,jdbcType=BIGINT},
      </if>
      <if test="record.oppositeUserId != null" >
        opposite_user_id = #{record.oppositeUserId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreated != null" >
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null" >
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update transfer_event
    set id = #{record.id,jdbcType=BIGINT},
      transaction_no = #{record.transactionNo,jdbcType=VARCHAR},
      self_user_id = #{record.selfUserId,jdbcType=BIGINT},
      opposite_user_id = #{record.oppositeUserId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=BIGINT},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cgx.test.infrastructure.persistence.demo.model.TransferEventDO" >
    update transfer_event
    <set >
      <if test="transactionNo != null" >
        transaction_no = #{transactionNo,jdbcType=VARCHAR},
      </if>
      <if test="selfUserId != null" >
        self_user_id = #{selfUserId,jdbcType=BIGINT},
      </if>
      <if test="oppositeUserId != null" >
        opposite_user_id = #{oppositeUserId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="gmtCreated != null" >
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cgx.test.infrastructure.persistence.demo.model.TransferEventDO" >
    update transfer_event
    set transaction_no = #{transactionNo,jdbcType=VARCHAR},
      self_user_id = #{selfUserId,jdbcType=BIGINT},
      opposite_user_id = #{oppositeUserId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=BIGINT},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>